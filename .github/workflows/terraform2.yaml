name: "Terraform"

on:
  push:
    branches:
      - 'feature/**'
      - 'develop'
  pull_request:
    branches:
      - 'develop'
      - 'main'

jobs:
  terraform-validate:
    name: "Terraform Validate"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init -backend=false

      - name: Terraform Validate
        run: terraform validate -no-color

  terraform-plan:
    name: "Terraform Plan"
    needs: terraform-validate
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -no-color -input=false -out=tfplan
          terraform show -no-color tfplan > tfplan.txt
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6
        env:
          PLAN: "$(cat tfplan.txt)"
        with:
          github-token: ${{ secrets.PERSONAL_TOKEN }}
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('tfplan.txt', 'utf8');
            const maxGitHubBodyLength = 65536;
            const output = `#### Terraform Plan ðŸ“–
            
            <details><summary>Show Plan</summary>
            
            \`\`\`terraform
            ${plan}
            \`\`\`
            
            </details>
            
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output.length > maxGitHubBodyLength ? output.substring(0, maxGitHubBodyLength) + '\n... Output truncated due to length' : output
            });

  create-pr-to-develop:
    name: "Create PR to Develop"
    if: startsWith(github.ref, 'refs/heads/feature/') && github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_TOKEN}}

      - name: Configure Git
        run: |
            git config --global user.name 'GitHub Actions'
            git config --global user.email 'actions@github.com'

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
          commit-message: "chore: merge changes from ${{ github.ref_name }}"
          title: "Merge ${{ github.ref_name }} to develop"
          body: "Automated PR created by GitHub Actions"
          base: develop
          branch: merge-${{ github.ref_name }}
          delete-branch: true
          draft: false
          labels: automated-pr,terraform

  create-pr-to-main:
    name: "Create PR to Main"
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_TOKEN}}

      - name: Create Release Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PERSONAL_TOKENPERSONAL_TOKEN }}
          commit-message: "chore: prepare release to main"
          title: "Release: Merge develop to main"
          body: |
            This PR prepares a new release by merging develop into main.
            
            **Review Checklist:**
            - [ ] All tests passed
            - [ ] Documentation updated
            - [ ] Code reviewed
          base: main
          branch: release/$(date +%Y%m%d%H%M%S)
          delete-branch: true
          draft: true
          labels: release,terraform

  terraform-apply:
    name: "Terraform Apply"
    needs: [terraform-validate, terraform-plan]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false