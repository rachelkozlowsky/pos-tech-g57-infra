#name: "Plan and Create PR to Main"
#
#on:
#  push:
#    branches:
#      - 'develop'
#  pull_request:
#    branches:
#      - 'main'
#
#jobs:
#  terraform-plan:
#    name: "Terraform Plan"
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v3
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: us-east-1
#
#      - name: Setup Terraform
#        uses: hashicorp/setup-terraform@v2
#
#      - name: Terraform Init
#        run: terraform init
#
#      - name: Terraform Plan
#        id: plan
#        run: |
#          terraform plan -no-color -input=false -out=tfplan
#          terraform show -no-color tfplan > tfplan.txt
#        continue-on-error: true
#
#      - name: Update Pull Request
#        if: github.event_name == 'pull_request'
#        uses: actions/github-script@v6
#        env:
#          PLAN: "$(cat tfplan.txt)"
#        with:
#          github-token: ${{ secrets.PERSONAL_TOKEN }}
#          script: |
#            const fs = require('fs');
#            const plan = fs.readFileSync('tfplan.txt', 'utf8');
#            const maxGitHubBodyLength = 65536;
#            const output = `#### Terraform Plan ðŸ“–
#
#            <details><summary>Show Plan</summary>
#
#            \`\`\`terraform
#            ${plan}
#            \`\`\`
#
#            </details>
#
#            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
#
#            github.rest.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: output.length > maxGitHubBodyLength ? output.substring(0, maxGitHubBodyLength) + '\n... Output truncated due to length' : output
#            });
#
#  create-pr-to-main:
#    name: "Create PR to Main"
#    needs: terraform-plan
#    if: github.ref == 'refs/heads/develop' && github.event_name == 'push' && success()
#    runs-on: ubuntu-latest
#
#    permissions:
#      contents: write
#      pull-requests: write
#      id-token: write
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#          token: ${{ secrets.PERSONAL_TOKEN }}
#
#      - name: Configure Git
#        run: |
#          git config --global user.name 'GitHub Actions'
#          git config --global user.email 'actions@github.com'
#
#      - name: Create Release Pull Request
#        uses: peter-evans/create-pull-request@v5
#        with:
#          token: ${{ secrets.PERSONAL_TOKEN }}
#          commit-message: "chore: prepare release to main"
#          title: "Release: Merge develop to main"
#          body: |
#            This PR prepares a new release by merging develop into main.
#
#            **Review Checklist:**
#            - [ ] All tests passed
#            - [ ] Documentation updated
#            - [ ] Code reviewed
#          base: main
#          branch: release/$(date +%Y%m%d%H%M%S)
#          delete-branch: true
#          draft: true
#          labels: release,terraform