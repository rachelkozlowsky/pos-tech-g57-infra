name: "Feature Validation and PR to Develop"

on:
  push:
    branches:
      - 'feature/**'
  pull_request:
    branches:
      - 'develop'

jobs:
  terraform-validate:
    name: "Terraform Validate"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init -backend=false

      - name: Terraform Validate
        run: terraform validate -no-color

  create-pr-to-develop:
    name: "Create PR to Develop"
    needs: terraform-validate
    if: startsWith(github.ref, 'refs/heads/feature/') && github.event_name == 'push' && needs.terraform-validate.result == 'success'
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git config --global --add safe.directory /github/workspace

      - name: Check for existing PR
        id: check-pr
        uses: actions/github-script@v6
        with:
          script: |
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: context.ref.replace('refs/heads/', ''),
              base: 'develop'
            });
            
            if (prs.length > 0) {
              console.log(`Found existing PR #${prs[0].number}`);
              core.setOutput('pr_number', prs[0].number);
              core.setOutput('pr_exists', 'true');
            } else {
              core.setOutput('pr_number', '0');
              core.setOutput('pr_exists', 'false');
            }

      - name: Create PR to Develop
        if: steps.check-pr.outputs.pr_exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          FEATURE_NAME: ${{ github.ref_name }}
        run: |
          # Cria o PR usando a API do GitHub
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls" \
            -d '{
              "title": "[Feature] '$FEATURE_NAME'",
              "body": "PR criado automaticamente da feature '$FEATURE_NAME' para develop\n\n## Descrição\nAlterações relacionadas à feature: '$FEATURE_NAME'\n\n## Checklist\n- [ ] O código foi revisado\n- [ ] Os testes passaram\n- [ ] O plano do Terraform foi aprovado",
              "head": "'$FEATURE_NAME'",
              "base": "develop"
            }'